What Architecturally neutral means in this context is that a java application can run on any machine that can run JVM (Java Virtual Machine). This was one of the key pivot points in the development of Java because it efficiently put their idea of "write once, run anywhere" into practice.
What Java does is, instead of making its compiled classes run on the memory of a machine, it compiles them into "bytecodes" and makes these "bytecodes" run on the Java Virtual Machine which in-turn uses a portion of the memory (we don't need to discuss its working here), so now any machine that has JVM installed can run your application. This was a drastic upgrade at the time, as programmers had to build separate codes keeping different architectures on their mind.
We enjoy fruits of this "write once, run anywhere" concept started by Java till now, as Google is now the frontrunner with Android running from mobile devices to cars.